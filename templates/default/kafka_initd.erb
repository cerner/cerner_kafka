#!/bin/sh
<%# coding: UTF-8%>
# Auto-generated by Chef, do not edit!
### BEGIN INIT INFO
# Provides: kafka
# Short-Description: Kafka broker server
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
### END INIT INFO

USER=<%= node["kafka"]["user"] %>
SLEEP_TIME=5
CURRENT_WAIT=0
TIMEOUT=<%= node["kafka"]["shutdown_timeout"] %>
KAFKA_MAIN=kafka.Kafka

# Setup JMX port environment variable, if set
<% if !node["kafka"]["env_vars"]["JMX_PORT"].nil? and !node["kafka"]["env_vars"]["JMX_PORT"].empty? -%>
SETUP_ENV="env JMX_PORT=<%= node["kafka"]["env_vars"]["JMX_PORT"] %>"
<% else -%>
SETUP_ENV=""
<% end -%>

# We have to pipe STDOUT here otherwise it will print logs when running script
START_SERVER_CMD="$SETUP_ENV nohup <%= node["kafka"]["install_dir"] %>/bin/kafka-server-start.sh <%= node["kafka"]["install_dir"] %>/config/server.properties >> <%= node["kafka"]["service"]["stdout"] %>  2>> <%= node["kafka"]["service"]["stderr"] %> &"

# We have to pipe STDOUT here otherwise it will print logs when running script
STOP_SERVER_CMD="<%= node["kafka"]["install_dir"] %>/bin/kafka-server-stop.sh >> <%= node["kafka"]["service"]["stdout"] %>  2>> <%= node["kafka"]["service"]["stderr"] %>"

start() {
  findPid

  if [ "" = "$FOUND_PID" ]; then
    su -l $USER -c "$START_SERVER_CMD"
      
    if [ $? -ne 0 ]; then
      echo "Error starting Kafka"
      exit 1
    fi

    echo "Kafka successfully started"

  else
    echo "Kafka is already running"
  fi
}

stop() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Kafka is not running, nothing to stop"
  else

    while [ -n "$FOUND_PID" ];
    do
      echo "Attempting to shutdown Kafka..."
      su -l $USER -c "$STOP_SERVER_CMD"

      if [ $? -ne 0 ]; then
        echo "Error stopping Kafka"
        exit 1
      fi

      sleep $SLEEP_TIME
      CURRENT_WAIT=$CURRENT_WAIT+$SLEEP_TIME
      if [ $CURRENT_WAIT -gt $TIMEOUT ]; then
        echo "Timed out waiting for Kafka to stop"
        exit 1
      fi
      findPid
    done

    echo "Stopped Kafka"

  fi
}

status() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Kafka is not running" ; exit 1
  else
    echo "Kafka is running : $FOUND_PID"
  fi
}

findPid() {
  FOUND_PID=$(pgrep -u $USER -f $KAFKA_MAIN)
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    status
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0
